niruba@Nirubas-MacBook-Air ~ % /usr/local/bin/python3 /Users/niruba/Desktop/InceptionV3/InceptionV3.py
2025-02-22 21:49:31.927419: I metal_plugin/src/device/metal_device.cc:1154] Metal device set to: Apple M2
2025-02-22 21:49:31.931197: I metal_plugin/src/device/metal_device.cc:296] systemMemory: 8.00 GB
2025-02-22 21:49:31.931221: I metal_plugin/src/device/metal_device.cc:313] maxCacheSize: 2.67 GB
2025-02-22 21:49:31.931765: I tensorflow/core/common_runtime/pluggable_device/pluggable_device_factory.cc:305] Could not identify NUMA node of platform GPU ID 0, defaulting to 0. Your kernel may not have been built with NUMA support.
2025-02-22 21:49:31.932377: I tensorflow/core/common_runtime/pluggable_device/pluggable_device_factory.cc:271] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 0 MB memory) -> physical PluggableDevice (device: 0, name: METAL, pci bus id: <undefined>)
Model: "sequential"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
┃ Layer (type)                         ┃ Output Shape                ┃         Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
│ inception_v3 (Functional)            │ (None, 5, 5, 2048)          │      21,802,784 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ global_average_pooling2d             │ (None, 2048)                │               0 │
│ (GlobalAveragePooling2D)             │                             │                 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dropout (Dropout)                    │ (None, 2048)                │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dense (Dense)                        │ (None, 120)                 │         245,880 │
└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘
 Total params: 22,048,664 (84.11 MB)
 Trainable params: 245,880 (960.47 KB)
 Non-trainable params: 21,802,784 (83.17 MB)
/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:121: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.
  self._warn_if_super_not_called()
Epoch 1/20
2025-02-22 21:49:39.257072: I tensorflow/core/grappler/optimizers/custom_graph_optimizer_registry.cc:117] Plugin optimizer for device_type GPU is enabled.

Epoch 1: val_loss improved from inf to 1.34591, saving model to InceptionV3model.keras
451/451 - 256s - 569ms/step - accuracy: 0.3657 - loss: 3.0137 - val_accuracy: 0.7088 - val_loss: 1.3459 - learning_rate: 1.0000e-04
Epoch 2/20

Epoch 2: val_loss improved from 1.34591 to 0.84280, saving model to InceptionV3model.keras
451/451 - 237s - 526ms/step - accuracy: 0.6795 - loss: 1.2967 - val_accuracy: 0.7810 - val_loss: 0.8428 - learning_rate: 1.0000e-04
Epoch 3/20

Epoch 3: val_loss improved from 0.84280 to 0.73040, saving model to InceptionV3model.keras
451/451 - 234s - 518ms/step - accuracy: 0.7247 - loss: 1.0099 - val_accuracy: 0.7962 - val_loss: 0.7304 - learning_rate: 1.0000e-04
Epoch 4/20

Epoch 4: val_loss improved from 0.73040 to 0.68459, saving model to InceptionV3model.keras
451/451 - 232s - 514ms/step - accuracy: 0.7370 - loss: 0.9266 - val_accuracy: 0.8034 - val_loss: 0.6846 - learning_rate: 1.0000e-04
Epoch 5/20

Epoch 5: val_loss improved from 0.68459 to 0.65893, saving model to InceptionV3model.keras
451/451 - 228s - 506ms/step - accuracy: 0.7502 - loss: 0.8689 - val_accuracy: 0.8030 - val_loss: 0.6589 - learning_rate: 1.0000e-04
Epoch 6/20

Epoch 6: val_loss improved from 0.65893 to 0.64120, saving model to InceptionV3model.keras
451/451 - 232s - 514ms/step - accuracy: 0.7579 - loss: 0.8301 - val_accuracy: 0.8069 - val_loss: 0.6412 - learning_rate: 1.0000e-04
Epoch 7/20

Epoch 7: val_loss improved from 0.64120 to 0.63658, saving model to InceptionV3model.keras
451/451 - 233s - 516ms/step - accuracy: 0.7648 - loss: 0.7944 - val_accuracy: 0.8137 - val_loss: 0.6366 - learning_rate: 1.0000e-04
Epoch 8/20

Epoch 8: val_loss improved from 0.63658 to 0.62586, saving model to InceptionV3model.keras
451/451 - 230s - 509ms/step - accuracy: 0.7670 - loss: 0.7791 - val_accuracy: 0.8105 - val_loss: 0.6259 - learning_rate: 1.0000e-04
Epoch 9/20

Epoch 9: val_loss improved from 0.62586 to 0.62185, saving model to InceptionV3model.keras
451/451 - 226s - 501ms/step - accuracy: 0.7756 - loss: 0.7556 - val_accuracy: 0.8069 - val_loss: 0.6219 - learning_rate: 1.0000e-04
Epoch 10/20

Epoch 10: val_loss improved from 0.62185 to 0.61858, saving model to InceptionV3model.keras
451/451 - 224s - 497ms/step - accuracy: 0.7790 - loss: 0.7382 - val_accuracy: 0.8121 - val_loss: 0.6186 - learning_rate: 1.0000e-04
Epoch 11/20

Epoch 11: val_loss did not improve from 0.61858
451/451 - 214s - 475ms/step - accuracy: 0.7808 - loss: 0.7237 - val_accuracy: 0.8134 - val_loss: 0.6195 - learning_rate: 1.0000e-04
Epoch 12/20

Epoch 12: val_loss improved from 0.61858 to 0.61679, saving model to InceptionV3model.keras
451/451 - 217s - 481ms/step - accuracy: 0.7818 - loss: 0.7200 - val_accuracy: 0.8118 - val_loss: 0.6168 - learning_rate: 1.0000e-04
Epoch 13/20

Epoch 13: val_loss improved from 0.61679 to 0.61357, saving model to InceptionV3model.keras
451/451 - 222s - 493ms/step - accuracy: 0.7863 - loss: 0.7072 - val_accuracy: 0.8141 - val_loss: 0.6136 - learning_rate: 1.0000e-04
Epoch 14/20

Epoch 14: val_loss improved from 0.61357 to 0.60918, saving model to InceptionV3model.keras
451/451 - 230s - 509ms/step - accuracy: 0.7888 - loss: 0.6920 - val_accuracy: 0.8137 - val_loss: 0.6092 - learning_rate: 1.0000e-04
Epoch 15/20

Epoch 15: val_loss did not improve from 0.60918
451/451 - 237s - 524ms/step - accuracy: 0.7902 - loss: 0.6801 - val_accuracy: 0.8095 - val_loss: 0.6223 - learning_rate: 1.0000e-04
Epoch 16/20

Epoch 16: val_loss did not improve from 0.60918
451/451 - 233s - 516ms/step - accuracy: 0.7950 - loss: 0.6666 - val_accuracy: 0.8118 - val_loss: 0.6150 - learning_rate: 1.0000e-04
Epoch 17/20

Epoch 17: val_loss improved from 0.60918 to 0.60809, saving model to InceptionV3model.keras
451/451 - 225s - 500ms/step - accuracy: 0.7972 - loss: 0.6516 - val_accuracy: 0.8179 - val_loss: 0.6081 - learning_rate: 1.0000e-04
Epoch 18/20

Epoch 18: val_loss did not improve from 0.60809
451/451 - 232s - 515ms/step - accuracy: 0.7957 - loss: 0.6570 - val_accuracy: 0.8115 - val_loss: 0.6185 - learning_rate: 1.0000e-04
Epoch 19/20

Epoch 19: val_loss did not improve from 0.60809
451/451 - 227s - 504ms/step - accuracy: 0.8026 - loss: 0.6411 - val_accuracy: 0.8134 - val_loss: 0.6119 - learning_rate: 1.0000e-04
Epoch 20/20

Epoch 20: val_loss did not improve from 0.60809
451/451 - 246s - 546ms/step - accuracy: 0.8045 - loss: 0.6273 - val_accuracy: 0.8111 - val_loss: 0.6153 - learning_rate: 1.0000e-04
Epoch 1/10

Epoch 1: val_loss did not improve from 0.60809
451/451 - 3653s - 8s/step - accuracy: 0.6549 - loss: 1.4624 - val_accuracy: 0.7762 - val_loss: 0.8165 - learning_rate: 1.0000e-05
Epoch 2/10

Epoch 2: val_loss did not improve from 0.60809
451/451 - 2867s - 6s/step - accuracy: 0.7419 - loss: 0.9787 - val_accuracy: 0.7907 - val_loss: 0.7077 - learning_rate: 1.0000e-05
Epoch 3/10

Epoch 3: val_loss did not improve from 0.60809
451/451 - 2060s - 5s/step - accuracy: 0.7694 - loss: 0.8220 - val_accuracy: 0.8060 - val_loss: 0.6404 - learning_rate: 1.0000e-05
Epoch 4/10

Epoch 4: val_loss did not improve from 0.60809
451/451 - 3453s - 8s/step - accuracy: 0.7924 - loss: 0.7392 - val_accuracy: 0.8144 - val_loss: 0.6143 - learning_rate: 1.0000e-05
Epoch 5/10

Epoch 5: val_loss improved from 0.60809 to 0.58942, saving model to InceptionV3model.keras
451/451 - 2101s - 5s/step - accuracy: 0.8141 - loss: 0.6568 - val_accuracy: 0.8183 - val_loss: 0.5894 - learning_rate: 1.0000e-05
Epoch 6/10

Epoch 6: val_loss improved from 0.58942 to 0.58930, saving model to InceptionV3model.keras
451/451 - 2112s - 5s/step - accuracy: 0.8261 - loss: 0.6125 - val_accuracy: 0.8189 - val_loss: 0.5893 - learning_rate: 1.0000e-05
Epoch 7/10

Epoch 7: val_loss improved from 0.58930 to 0.58339, saving model to InceptionV3model.keras
451/451 - 2064s - 5s/step - accuracy: 0.8367 - loss: 0.5734 - val_accuracy: 0.8241 - val_loss: 0.5834 - learning_rate: 1.0000e-05
Epoch 8/10

Epoch 8: val_loss improved from 0.58339 to 0.56474, saving model to InceptionV3model.keras
451/451 - 2243s - 5s/step - accuracy: 0.8501 - loss: 0.5240 - val_accuracy: 0.8238 - val_loss: 0.5647 - learning_rate: 1.0000e-05
Epoch 9/10

Epoch 9: val_loss did not improve from 0.56474
451/451 - 2245s - 5s/step - accuracy: 0.8608 - loss: 0.4873 - val_accuracy: 0.8244 - val_loss: 0.5662 - learning_rate: 1.0000e-05
Epoch 10/10

Epoch 10: val_loss improved from 0.56474 to 0.55894, saving model to InceptionV3model.keras
451/451 - 2417s - 5s/step - accuracy: 0.8644 - loss: 0.4634 - val_accuracy: 0.8306 - val_loss: 0.5589 - learning_rate: 1.0000e-05
97/97 ━━━━━━━━━━━━━━━━━━━━ 86s 679ms/step

Classification Metrics:
Accuracy: 0.8283
Precision: 0.8332
Recall: 0.8283
F1-score: 0.8273

Top Misclassified Dog Breeds:
Appenzeller misclassified as EntleBucher: 11 times
Siberian Husky misclassified as Eskimo Dog: 16 times
Miniature Poodle misclassified as Toy Poodle: 9 times
Eskimo Dog misclassified as Siberian Husky: 8 times

Most Confusing Pair of Dog Breed:
Siberian Husky misclassified as Eskimo Dog (16 times)
niruba@Nirubas-MacBook-Air ~ % 